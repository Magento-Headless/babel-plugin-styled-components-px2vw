// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`e2e should transform runtime 1`] = `
"import styled, { css, createGlobalStyle, keyframes } from 'styled-components';
const mixins = css\`
  padding: 0 2.13333vw;
  margin: 2.13333vw 4.26667vw 2.13333vw 4.26667vw;
\`;
const Animation = keyframes\`
  from {
    transform: translateX(13.33333vw);
  }

  to {
    transform: translateX(-13.33333vw);
  }
\`;
const Input = styled.input.attrs(props => ({
  type: 'password',
  size: props.size || '1em',
  width: props.width || 100
}))\`
  color: palevioletred;
  font-size: 1.86667vw;
  border: 1px solid palevioletred;
  border-radius: 1.06667vw;
  width: \${props => _px2vw(props.width)};
  padding: \${props => props.size};
\`;
const GlobalStyle = createGlobalStyle\`
  html body {
    font-size: 2.4vw;
  }
\`;

function getHeight() {
  const height = 100;
  return height + window.screen.availHeight / 2;
}

const BlockButton = styled.button\`
  \${mixins};
  display: block;
  width: 100%;
  height: \${_px2vw(getHeight())};
  line-height: 12.8vw;
\`;
const lineHeight = '44';
const InlineButton = styled.button\`
  display: inline;
  width: \${props => _px2vw(() => {
  if (props.width) {
    return props.width;
  } else {
    return 0;
  }
})};
  height: \${_px2vw(props.height)};
  line-height: \${_px2vw(lineHeight)};
\`;
const ExtendedButton = styled(InlineButton)\`
  width: 16vw;
  height: 4.26667vw;
  line-height: 4.26667vw;
  font-size: 1.86667vw;
\`;
const SizeableButton = styled.button(props => \`
  display: inline;
  width: \${_px2vw(props.width)};
  height: \${props.height};
  font-size: 2.13333vw;
\`);
const tagObj = {
  tag(strings) {
    console.log(strings.raw[0]);
  }

};
const str = \\"-->\\";
const ingoreText = tagObj.tag\`
  string text line 1 \\\\n string text line 2 \${str + '--<'}
\`;

function _px2vw(input) {
  if (typeof input === 'function') return _px2vw(input());
  var value = typeof input === 'string' ? parseFloat(input) : typeof input === 'number' ? input : 0;
  var pixels = Number.isNaN(value) ? 0 : value;

  if (pixels < 1) {
    return \`\${pixels}px\`;
  }

  var mul = Math.pow(10, 5 + 1);
  return \`\${Math.round(Math.floor(pixels * 100 / 750 * mul) / 10) * 10 / mul}vw\`;
}"
`;

exports[`e2e should work 1`] = `
"import styled, { css, createGlobalStyle, keyframes } from 'styled-components';
const mixins = css\`
  padding: 0 2.13333vw;
  margin: 2.13333vw 4.26667vw 2.13333vw 4.26667vw;
\`;
const Animation = keyframes\`
  from {
    transform: translateX(13.33333vw);
  }

  to {
    transform: translateX(-13.33333vw);
  }
\`;
const Input = styled.input.attrs(props => ({
  type: 'password',
  size: props.size || '1em',
  width: props.width || 100
}))\`
  color: palevioletred;
  font-size: 1.86667vw;
  border: 1px solid palevioletred;
  border-radius: 1.06667vw;
  width: \${props => props.width}px;
  padding: \${props => props.size};
\`;
const GlobalStyle = createGlobalStyle\`
  html body {
    font-size: 2.4vw;
  }
\`;

function getHeight() {
  const height = 100;
  return height + window.screen.availHeight / 2;
}

const BlockButton = styled.button\`
  \${mixins};
  display: block;
  width: 100%;
  height: \${getHeight()}px;
  line-height: 12.8vw;
\`;
const lineHeight = '44';
const InlineButton = styled.button\`
  display: inline;
  width: \${props => {
  if (props.width) {
    return props.width;
  } else {
    return 0;
  }
}}px;
  height: \${props.height}px;
  line-height: \${lineHeight}px;
\`;
const ExtendedButton = styled(InlineButton)\`
  width: 16vw;
  height: 4.26667vw;
  line-height: 4.26667vw;
  font-size: 1.86667vw;
\`;
const SizeableButton = styled.button(props => \`
  display: inline;
  width: \${props.width}px;
  height: \${props.height};
  font-size: 2.13333vw;
\`);
const tagObj = {
  tag(strings) {
    console.log(strings.raw[0]);
  }

};
const str = \\"-->\\";
const ingoreText = tagObj.tag\`
  string text line 1 \\\\n string text line 2 \${str + '--<'}
\`;"
`;
